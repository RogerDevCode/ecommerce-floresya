{"version":3,"file":"prisma.js","names":["_index","require","_logger","NODE_ENV","process","env","isProduction","exports","isDevelopment","createPrismaConfig","baseConfig","datasources","db","url","DATABASE_URL","log","emit","level","errorFormat","prisma","PrismaClient","setupEventHandlers","$on","e","logError","service","timestamp","Date","toISOString","logger","warn","message","target","info","query","params","duration","durationMs","parseInt","isSlowQuery","logLevel","length","substring","connectPrisma","$connect","success","environment","error","databaseUrl","disconnectPrisma","$disconnect","healthCheck","$queryRaw","status","executeTransaction","operations","options","timeout","maxWait","result","$transaction","operationsCount","setupGracefulShutdown","shutdown","signal","exit","on","_default","default"],"sources":["../../src-es6/config/prisma.js"],"sourcesContent":["/**\n * Prisma Client Configuration - ES6+ Version\n * Enhanced with modern JavaScript features and better error handling\n */\n\nimport { PrismaClient } from '../../src/generated/prisma/index.js';\nimport { logger, logError } from '../utils/logger.js';\n\n// Environment detection\nconst { NODE_ENV } = process.env;\nconst isProduction = NODE_ENV === 'production';\nconst isDevelopment = NODE_ENV === 'development';\n\n// Enhanced logging configuration using object shorthand\nconst createPrismaConfig = () => {\n    const baseConfig = {\n        // Connection pooling settings\n        datasources: {\n            db: {\n                url: process.env.DATABASE_URL\n            }\n        }\n    };\n\n    if (isProduction) {\n        return {\n            ...baseConfig,\n            log: [\n                { emit: 'event', level: 'query' },\n                { emit: 'event', level: 'error' },\n                { emit: 'event', level: 'info' },\n                { emit: 'event', level: 'warn' }\n            ],\n            // Production optimizations\n            errorFormat: 'minimal'\n        };\n    }\n\n    // Development configuration with enhanced logging\n    return {\n        ...baseConfig,\n        log: ['query', 'info', 'warn', 'error'],\n        errorFormat: 'pretty'\n    };\n};\n\n// Create Prisma client with enhanced configuration\nconst prisma = new PrismaClient(createPrismaConfig());\n\n// Enhanced event handlers using arrow functions and destructuring\nconst setupEventHandlers = () => {\n    // Error handler with enhanced logging\n    prisma.$on('error', (e) => {\n        logError('PRISMA', 'Database error occurred', e, {\n            level: 'critical',\n            service: 'database',\n            timestamp: new Date().toISOString()\n        });\n    });\n\n    // Warning handler\n    prisma.$on('warn', (e) => {\n        logger.warn('PRISMA', 'Database warning', {\n            message: e.message,\n            target: e.target,\n            timestamp: new Date().toISOString()\n        });\n    });\n\n    // Info handler\n    prisma.$on('info', (e) => {\n        logger.info('PRISMA', 'Database info', {\n            message: e.message,\n            target: e.target,\n            timestamp: new Date().toISOString()\n        });\n    });\n\n    // Enhanced query handler for development\n    prisma.$on('query', (e) => {\n        if (!isDevelopment) return;\n\n        const { query, params, duration, target } = e;\n        \n        // Performance warning for slow queries\n        const durationMs = parseInt(duration, 10);\n        const isSlowQuery = durationMs > 1000; // 1 second threshold\n        \n        const logLevel = isSlowQuery ? 'warn' : 'debug';\n        const message = isSlowQuery \n            ? `Slow query detected (${duration}ms)` \n            : `Query executed (${duration}ms)`;\n\n        logger[logLevel]('PRISMA_QUERY', message, {\n            query: query.length > 200 ? `${query.substring(0, 200)}...` : query,\n            params: params.length > 100 ? `${params.substring(0, 100)}...` : params,\n            duration,\n            target,\n            isSlowQuery,\n            timestamp: new Date().toISOString()\n        });\n    });\n};\n\n// Connection management with enhanced error handling\nconst connectPrisma = async () => {\n    try {\n        await prisma.$connect();\n        logger.success('PRISMA', 'Database connection established successfully', {\n            environment: NODE_ENV,\n            timestamp: new Date().toISOString()\n        });\n        return true;\n    } catch (error) {\n        logError('PRISMA', 'Failed to connect to database', error, {\n            environment: NODE_ENV,\n            databaseUrl: process.env.DATABASE_URL ? 'Set' : 'Not set',\n            timestamp: new Date().toISOString()\n        });\n        return false;\n    }\n};\n\nconst disconnectPrisma = async () => {\n    try {\n        await prisma.$disconnect();\n        logger.info('PRISMA', 'Database connection closed successfully');\n        return true;\n    } catch (error) {\n        logError('PRISMA', 'Error closing database connection', error);\n        return false;\n    }\n};\n\n// Health check function\nconst healthCheck = async () => {\n    try {\n        // Simple query to test connection\n        await prisma.$queryRaw`SELECT 1`;\n        return {\n            status: 'healthy',\n            timestamp: new Date().toISOString(),\n            environment: NODE_ENV\n        };\n    } catch (error) {\n        logError('PRISMA', 'Health check failed', error);\n        return {\n            status: 'unhealthy',\n            error: error.message,\n            timestamp: new Date().toISOString(),\n            environment: NODE_ENV\n        };\n    }\n};\n\n// Transaction helper with enhanced error handling\nconst executeTransaction = async (operations, options = {}) => {\n    const { timeout = 5000, maxWait = 2000 } = options;\n    \n    try {\n        const result = await prisma.$transaction(operations, {\n            timeout,\n            maxWait\n        });\n        \n        logger.info('PRISMA_TRANSACTION', 'Transaction completed successfully', {\n            operationsCount: operations.length,\n            timeout,\n            maxWait\n        });\n        \n        return { success: true, result };\n    } catch (error) {\n        logError('PRISMA_TRANSACTION', 'Transaction failed', error, {\n            operationsCount: operations.length,\n            timeout,\n            maxWait\n        });\n        \n        return { success: false, error };\n    }\n};\n\n// Setup event handlers\nsetupEventHandlers();\n\n// Graceful shutdown handling\nconst setupGracefulShutdown = () => {\n    const shutdown = async (signal) => {\n        logger.info('PRISMA', `Received ${signal}, closing database connection...`);\n        await disconnectPrisma();\n        process.exit(0);\n    };\n\n    process.on('SIGINT', () => shutdown('SIGINT'));\n    process.on('SIGTERM', () => shutdown('SIGTERM'));\n    process.on('SIGUSR2', () => shutdown('SIGUSR2')); // nodemon restart\n};\n\n// Setup graceful shutdown in non-test environments\nif (NODE_ENV !== 'test') {\n    setupGracefulShutdown();\n}\n\n// Enhanced exports with both named and default exports\nexport {\n    prisma,\n    connectPrisma,\n    disconnectPrisma,\n    healthCheck,\n    executeTransaction,\n    isProduction,\n    isDevelopment\n};\n\n// Default export for main functionality\nexport default prisma;"],"mappings":"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","ignoreList":[]}