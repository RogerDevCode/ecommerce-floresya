{"numTotalTestSuites":120,"numPassedTestSuites":120,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":240,"numPassedTests":235,"numFailedTests":5,"numPendingTests":0,"numTodoTests":0,"startTime":1758720583459,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should connect to Supabase successfully","status":"passed","title":"should connect to Supabase successfully","duration":10,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in products table","status":"passed","title":"should have real data in products table","duration":5,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in occasions table","status":"passed","title":"should have real data in occasions table","duration":3,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in product_images table","status":"passed","title":"should have real data in product_images table","duration":2,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in product_occasions table","status":"passed","title":"should have real data in product_occasions table","duration":9,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Relationships"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Relationships should verify product-occasion relationships","status":"passed","title":"should verify product-occasion relationships","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Relationships"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Relationships should verify product-images relationships","status":"passed","title":"should verify product-images relationships","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify all products have valid data","status":"passed","title":"should verify all products have valid data","duration":9,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify all occasions have valid data","status":"passed","title":"should verify all occasions have valid data","duration":10,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify image URLs are valid","status":"passed","title":"should verify image URLs are valid","duration":6,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Performance"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Performance should perform basic queries efficiently","status":"passed","title":"should perform basic queries efficiently","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Performance"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Performance should handle multiple concurrent queries","status":"passed","title":"should handle multiple concurrent queries","duration":0,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should provide health status information","status":"passed","title":"should provide health status information","duration":11,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should track connection metrics accurately","status":"passed","title":"should track connection metrics accurately","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should validate database schema integrity","status":"passed","title":"should validate database schema integrity","duration":9,"failureMessages":[]}],"startTime":1758720586585,"endTime":1758720586668,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/database-connection.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/main with correct MIME type","status":"pending","title":"should serve /dist/frontend/main with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/authManager with correct MIME type","status":"pending","title":"should serve /dist/frontend/authManager with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/auth with correct MIME type","status":"pending","title":"should serve /dist/frontend/auth with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/utils/logger with correct MIME type","status":"pending","title":"should serve /dist/frontend/utils/logger with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/services/apiClient with correct MIME type","status":"pending","title":"should serve /dist/frontend/services/apiClient with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/services/api with correct MIME type","status":"pending","title":"should serve /dist/frontend/services/api with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/scroll-effects-fix with correct MIME type","status":"pending","title":"should serve /dist/frontend/scroll-effects-fix with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/adminPanel with correct MIME type","status":"pending","title":"should serve /dist/frontend/adminPanel with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/product-detail with correct MIME type","status":"pending","title":"should serve /dist/frontend/product-detail with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Files MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Files MIME Types should serve /dist/frontend/users-admin with correct MIME type","status":"pending","title":"should serve /dist/frontend/users-admin with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Source Maps MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Source Maps MIME Types should serve /dist/frontend/main.js.map with correct MIME type","status":"pending","title":"should serve /dist/frontend/main.js.map with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Source Maps MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Source Maps MIME Types should serve /dist/frontend/authManager.js.map with correct MIME type","status":"pending","title":"should serve /dist/frontend/authManager.js.map with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Source Maps MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Source Maps MIME Types should serve /dist/frontend/product-detail.js.map with correct MIME type","status":"pending","title":"should serve /dist/frontend/product-detail.js.map with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Frontend JavaScript Source Maps MIME Types"],"fullName":" FloresYa MIME Types Integration Tests Frontend JavaScript Source Maps MIME Types should serve /dist/frontend/users-admin.js.map with correct MIME type","status":"pending","title":"should serve /dist/frontend/users-admin.js.map with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Security Headers Validation"],"fullName":" FloresYa MIME Types Integration Tests Security Headers Validation should include X-Content-Type-Options header","status":"pending","title":"should include X-Content-Type-Options header","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Security Headers Validation"],"fullName":" FloresYa MIME Types Integration Tests Security Headers Validation should not have concatenated MIME types in any headers","status":"pending","title":"should not have concatenated MIME types in any headers","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Error Handling for MIME Type Issues"],"fullName":" FloresYa MIME Types Integration Tests Error Handling for MIME Type Issues should handle non-existent JavaScript files gracefully","status":"pending","title":"should handle non-existent JavaScript files gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Error Handling for MIME Type Issues"],"fullName":" FloresYa MIME Types Integration Tests Error Handling for MIME Type Issues should not serve HTML files with JavaScript MIME type","status":"pending","title":"should not serve HTML files with JavaScript MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Symlink Resolution"],"fullName":" FloresYa MIME Types Integration Tests Symlink Resolution should serve auth.js symlink with correct MIME type","status":"pending","title":"should serve auth.js symlink with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa MIME Types Integration Tests","Symlink Resolution"],"fullName":" FloresYa MIME Types Integration Tests Symlink Resolution should serve services/api.js symlink with correct MIME type","status":"pending","title":"should serve services/api.js symlink with correct MIME type","failureMessages":[]}],"startTime":1758720583459,"endTime":1758720583459,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/mime-types.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should return occasions from mock database","status":"pending","title":"should return occasions from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should return active occasions only from mock database","status":"pending","title":"should return active occasions only from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should sort occasions by display order from mock database","status":"pending","title":"should sort occasions by display order from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should filter occasions by search term from mock database","status":"pending","title":"should filter occasions by search term from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/:id - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/:id - Simple Mock Integration should return a specific occasion from mock database","status":"pending","title":"should return a specific occasion from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/:id - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/:id - Simple Mock Integration should return 404 for non-existent occasion","status":"pending","title":"should return 404 for non-existent occasion","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/search - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/search - Simple Mock Integration should handle search endpoint gracefully","status":"pending","title":"should handle search endpoint gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/search - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/search - Simple Mock Integration should handle non-matching search gracefully","status":"pending","title":"should handle non-matching search gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify mock database connection and occasions data integrity","status":"pending","title":"should verify mock database connection and occasions data integrity","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify product_occasions relationship in mock database","status":"pending","title":"should verify product_occasions relationship in mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify occasions have proper slug format","status":"pending","title":"should verify occasions have proper slug format","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Occasions Data Consistency"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Occasions Data Consistency should verify all occasions have unique slugs","status":"pending","title":"should verify all occasions have unique slugs","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Occasions Data Consistency"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Occasions Data Consistency should verify all occasions have valid descriptions","status":"pending","title":"should verify all occasions have valid descriptions","failureMessages":[]}],"startTime":1758720583459,"endTime":1758720583459,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/occasions.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products should return products - one line setup","status":"pending","title":"should return products - one line setup","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products should filter active products only","status":"pending","title":"should filter active products only","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products/carousel"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products/carousel should return carousel products - dead simple","status":"pending","title":"should return carousel products - dead simple","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products/featured"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products/featured should return featured products - minimal setup","status":"pending","title":"should return featured products - minimal setup","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products/:id"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products/:id should return specific product","status":"pending","title":"should return specific product","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products/:id"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products/:id should return 404 for non-existent product","status":"pending","title":"should return 404 for non-existent product","failureMessages":[]},{"ancestorTitles":["","FloresYa Products - Ultra Simple Tests","GET /api/products/search"],"fullName":" FloresYa Products - Ultra Simple Tests GET /api/products/search should search products","status":"pending","title":"should search products","failureMessages":[]}],"startTime":1758720583459,"endTime":1758720583459,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/products-simplified.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should return products from mock database","status":"failed","title":"should return products from mock database","duration":31,"failureMessages":["vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function"],"location":{"line":47,"column":36}},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should return products with mock images from database","status":"failed","title":"should return products with mock images from database","duration":30,"failureMessages":["vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function"],"location":{"line":93,"column":36}},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should filter products by active status from mock database","status":"failed","title":"should filter products by active status from mock database","duration":34,"failureMessages":["vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function"],"location":{"line":128,"column":36}},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should sort products by carousel order from mock database","status":"failed","title":"should sort products by carousel order from mock database","duration":31,"failureMessages":["vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function"],"location":{"line":158,"column":36}},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/carousel - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/carousel - Simple Mock Integration should return carousel products from mock database","status":"failed","title":"should return carousel products from mock database","duration":67,"failureMessages":["vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function","vi.mocked(...).mockReturnValue is not a function"],"location":{"line":189,"column":36}},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/carousel - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/carousel - Simple Mock Integration should return carousel products with mock images","status":"pending","title":"should return carousel products with mock images","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/featured - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/featured - Simple Mock Integration should return featured products from mock database","status":"pending","title":"should return featured products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/:id - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/:id - Simple Mock Integration should return a specific product from mock database","status":"pending","title":"should return a specific product from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/:id - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/:id - Simple Mock Integration should return 404 for non-existent product","status":"pending","title":"should return 404 for non-existent product","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/search - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/search - Simple Mock Integration should search products from mock database","status":"pending","title":"should search products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/search - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/search - Simple Mock Integration should return empty results for non-matching search","status":"pending","title":"should return empty results for non-matching search","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition Database Connection Validation should verify mock database connection and data integrity","status":"pending","title":"should verify mock database connection and data integrity","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition Database Connection Validation should verify product images relationship in mock database","status":"pending","title":"should verify product images relationship in mock database","failureMessages":[]}],"startTime":1758720591788,"endTime":1758720592036,"status":"failed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/products.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Server Integration Tests","Health Check Endpoint"],"fullName":" FloresYa Server Integration Tests Health Check Endpoint should return server health status","status":"pending","title":"should return server health status","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Health Check Endpoint"],"fullName":" FloresYa Server Integration Tests Health Check Endpoint should return valid JSON content type","status":"pending","title":"should return valid JSON content type","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Routes Structure"],"fullName":" FloresYa Server Integration Tests API Routes Structure should have products routes available","status":"pending","title":"should have products routes available","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Routes Structure"],"fullName":" FloresYa Server Integration Tests API Routes Structure should have occasions routes available","status":"pending","title":"should have occasions routes available","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Routes Structure"],"fullName":" FloresYa Server Integration Tests API Routes Structure should have orders routes available","status":"pending","title":"should have orders routes available","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Routes Structure"],"fullName":" FloresYa Server Integration Tests API Routes Structure should have logs routes available","status":"pending","title":"should have logs routes available","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Error Handling"],"fullName":" FloresYa Server Integration Tests Error Handling should return 404 for non-existent API endpoints","status":"pending","title":"should return 404 for non-existent API endpoints","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Error Handling"],"fullName":" FloresYa Server Integration Tests Error Handling should handle malformed JSON gracefully","status":"pending","title":"should handle malformed JSON gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","CORS and Security Headers"],"fullName":" FloresYa Server Integration Tests CORS and Security Headers should include security headers","status":"pending","title":"should include security headers","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","CORS and Security Headers"],"fullName":" FloresYa Server Integration Tests CORS and Security Headers should handle CORS preflight requests","status":"pending","title":"should handle CORS preflight requests","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Static File Serving"],"fullName":" FloresYa Server Integration Tests Static File Serving should serve static files from public directory","status":"pending","title":"should serve static files from public directory","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Static File Serving"],"fullName":" FloresYa Server Integration Tests Static File Serving should serve CSS files with correct MIME type","status":"pending","title":"should serve CSS files with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","Static File Serving"],"fullName":" FloresYa Server Integration Tests Static File Serving should serve JavaScript files with correct MIME type","status":"pending","title":"should serve JavaScript files with correct MIME type","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Documentation"],"fullName":" FloresYa Server Integration Tests API Documentation should serve Swagger API documentation","status":"pending","title":"should serve Swagger API documentation","failureMessages":[]},{"ancestorTitles":["","FloresYa Server Integration Tests","API Documentation"],"fullName":" FloresYa Server Integration Tests API Documentation should serve Swagger JSON specification","status":"pending","title":"should serve Swagger JSON specification","failureMessages":[]}],"startTime":1758720583459,"endTime":1758720583459,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/server.test.ts"},{"assertionResults":[{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should upload product image successfully","status":"passed","title":"should upload product image successfully","duration":16,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle validation errors","status":"passed","title":"should handle validation errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle missing file","status":"passed","title":"should handle missing file","duration":6,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle invalid image file","status":"passed","title":"should handle invalid image file","duration":7,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle service errors","status":"passed","title":"should handle service errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should delete product images successfully","status":"passed","title":"should delete product images successfully","duration":7,"failureMessages":[]},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should handle validation errors","status":"passed","title":"should handle validation errors","duration":10,"failureMessages":[]},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should handle service errors","status":"passed","title":"should handle service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should return product images successfully","status":"passed","title":"should return product images successfully","duration":9,"failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should handle validation errors","status":"passed","title":"should handle validation errors","duration":6,"failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should handle service errors","status":"passed","title":"should handle service errors","duration":31,"failureMessages":[]},{"ancestorTitles":["","ImageController","getImagesGallery"],"fullName":" ImageController getImagesGallery should return images gallery successfully","status":"passed","title":"should return images gallery successfully","duration":3,"failureMessages":[]},{"ancestorTitles":["","ImageController","getImagesGallery"],"fullName":" ImageController getImagesGallery should handle service errors","status":"passed","title":"should handle service errors","duration":4,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should upload site image successfully","status":"passed","title":"should upload site image successfully","duration":6,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should handle validation errors","status":"passed","title":"should handle validation errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should handle missing file","status":"passed","title":"should handle missing file","duration":11,"failureMessages":[]},{"ancestorTitles":["","ImageController","getCurrentSiteImages"],"fullName":" ImageController getCurrentSiteImages should return current site images successfully","status":"passed","title":"should return current site images successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","getCurrentSiteImages"],"fullName":" ImageController getCurrentSiteImages should handle service errors","status":"passed","title":"should handle service errors","duration":9,"failureMessages":[]},{"ancestorTitles":["","ImageController","getProductsWithImageCounts"],"fullName":" ImageController getProductsWithImageCounts should return products with image counts successfully","status":"passed","title":"should return products with image counts successfully","duration":4,"failureMessages":[]},{"ancestorTitles":["","ImageController","getProductsWithImageCounts"],"fullName":" ImageController getProductsWithImageCounts should handle service errors","status":"passed","title":"should handle service errors","duration":3,"failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate uploadProductImage correctly","status":"passed","title":"should validate uploadProductImage correctly","duration":5,"failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate deleteProductImages correctly","status":"passed","title":"should validate deleteProductImages correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate getProductImages correctly","status":"passed","title":"should validate getProductImages correctly","duration":15,"failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate getImagesGallery correctly","status":"passed","title":"should validate getImagesGallery correctly","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate uploadSiteImage correctly","status":"passed","title":"should validate uploadSiteImage correctly","duration":6,"failureMessages":[]}],"startTime":1758720587021,"endTime":1758720587281,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/ImageController.test.ts"},{"assertionResults":[{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should receive logs successfully","status":"passed","title":"should receive logs successfully","duration":47,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle validation errors","status":"passed","title":"should handle validation errors","duration":3,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle invalid logs format (not an array)","status":"passed","title":"should handle invalid logs format (not an array)","duration":23,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle empty logs array","status":"passed","title":"should handle empty logs array","duration":26,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should log errors and warnings to console","status":"passed","title":"should log errors and warnings to console","duration":11,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle logs without sessionId","status":"passed","title":"should handle logs without sessionId","duration":2,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle service errors","status":"passed","title":"should handle service errors","duration":20,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle logs with different levels correctly","status":"passed","title":"should handle logs with different levels correctly","duration":4,"failureMessages":[]},{"ancestorTitles":["","LogsController","receiveFrontendLogs"],"fullName":" LogsController receiveFrontendLogs should handle logs with missing optional data field","status":"passed","title":"should handle logs with missing optional data field","duration":2,"failureMessages":[]},{"ancestorTitles":["","LogsController","logsValidators"],"fullName":" LogsController logsValidators should validate receiveFrontendLogs correctly","status":"passed","title":"should validate receiveFrontendLogs correctly","duration":18,"failureMessages":[]},{"ancestorTitles":["","LogsController","logsValidators"],"fullName":" LogsController logsValidators should have proper validation rules","status":"passed","title":"should have proper validation rules","duration":1,"failureMessages":[]}],"startTime":1758720589351,"endTime":1758720589516,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/LogsController.test.ts"},{"assertionResults":[{"ancestorTitles":["","OccasionsController","getOccasions"],"fullName":" OccasionsController getOccasions should return all active occasions successfully","status":"passed","title":"should return all active occasions successfully","duration":67,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasions"],"fullName":" OccasionsController getOccasions should handle service errors","status":"passed","title":"should handle service errors","duration":44,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should return occasion by ID successfully","status":"passed","title":"should return occasion by ID successfully","duration":22,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":10,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should handle service errors","status":"passed","title":"should handle service errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should create occasion successfully","status":"passed","title":"should create occasion successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should handle duplicate name error","status":"passed","title":"should handle duplicate name error","duration":25,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":2,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should update occasion successfully","status":"passed","title":"should update occasion successfully","duration":16,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":15,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should perform logical deletion when occasion has references","status":"passed","title":"should perform logical deletion when occasion has references","duration":11,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should perform physical deletion when occasion has no references","status":"passed","title":"should perform physical deletion when occasion has no references","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":14,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","capitalizeOccasionName"],"fullName":" OccasionsController Private helper methods capitalizeOccasionName should capitalize occasion names correctly","status":"passed","title":"should capitalize occasion names correctly","duration":9,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","capitalizeOccasionName"],"fullName":" OccasionsController Private helper methods capitalizeOccasionName should handle empty and single word names","status":"passed","title":"should handle empty and single word names","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","normalizeOccasionName"],"fullName":" OccasionsController Private helper methods normalizeOccasionName should normalize occasion names correctly","status":"passed","title":"should normalize occasion names correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","normalizeOccasionName"],"fullName":" OccasionsController Private helper methods normalizeOccasionName should preserve ñ character","status":"passed","title":"should preserve ñ character","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should return false when name does not exist","status":"passed","title":"should return false when name does not exist","duration":13,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should return true when name exists","status":"passed","title":"should return true when name exists","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should exclude specified ID when checking","status":"passed","title":"should exclude specified ID when checking","duration":0,"failureMessages":[]}],"startTime":1758720587140,"endTime":1758720587407,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OccasionsController.test.ts"},{"assertionResults":[{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should return orders successfully - clean simple test","status":"passed","title":"should return orders successfully - clean simple test","duration":44,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should handle validation errors","status":"passed","title":"should handle validation errors","duration":15,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should handle service errors","status":"passed","title":"should handle service errors","duration":56,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should use default values when query params are missing","status":"passed","title":"should use default values when query params are missing","duration":6,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should limit maximum limit value","status":"passed","title":"should limit maximum limit value","duration":14,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should return order successfully","status":"passed","title":"should return order successfully","duration":7,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle validation errors","status":"passed","title":"should handle validation errors","duration":30,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle order not found","status":"passed","title":"should handle order not found","duration":14,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle service errors","status":"passed","title":"should handle service errors","duration":17,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should create order successfully","status":"passed","title":"should create order successfully","duration":10,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should handle validation errors","status":"passed","title":"should handle validation errors","duration":15,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should handle service errors","status":"passed","title":"should handle service errors","duration":26,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should update order successfully","status":"passed","title":"should update order successfully","duration":19,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle validation errors","status":"passed","title":"should handle validation errors","duration":5,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle empty update data","status":"passed","title":"should handle empty update data","duration":10,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle service errors","status":"passed","title":"should handle service errors","duration":21,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should update order status successfully","status":"passed","title":"should update order status successfully","duration":20,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should handle validation errors","status":"passed","title":"should handle validation errors","duration":14,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should handle service errors","status":"passed","title":"should handle service errors","duration":12,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderStatusHistory"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderStatusHistory should return order status history successfully","status":"passed","title":"should return order status history successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderStatusHistory"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderStatusHistory should handle service errors","status":"passed","title":"should handle service errors","duration":29,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate getOrders correctly","status":"passed","title":"should validate getOrders correctly","duration":9,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate getOrderById correctly","status":"passed","title":"should validate getOrderById correctly","duration":10,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate createOrder correctly","status":"passed","title":"should validate createOrder correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate updateOrder correctly","status":"passed","title":"should validate updateOrder correctly","duration":5,"failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate updateOrderStatus correctly","status":"passed","title":"should validate updateOrderStatus correctly","duration":1,"failureMessages":[]}],"startTime":1758720587921,"endTime":1758720588413,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OrderController.test.ts"},{"assertionResults":[{"ancestorTitles":["","OrderService","getOrders"],"fullName":" OrderService getOrders should return orders successfully","status":"passed","title":"should return orders successfully","duration":34,"failureMessages":[]},{"ancestorTitles":["","OrderService","getOrders"],"fullName":" OrderService getOrders should handle database errors","status":"passed","title":"should handle database errors","duration":61,"failureMessages":[]},{"ancestorTitles":["","OrderService","getOrderById"],"fullName":" OrderService getOrderById should return order successfully","status":"passed","title":"should return order successfully","duration":13,"failureMessages":[]},{"ancestorTitles":["","OrderService","getOrderById"],"fullName":" OrderService getOrderById should return null for non-existent order","status":"passed","title":"should return null for non-existent order","duration":0,"failureMessages":[]},{"ancestorTitles":["","OrderService","createOrder"],"fullName":" OrderService createOrder should create order successfully","status":"passed","title":"should create order successfully","duration":16,"failureMessages":[]},{"ancestorTitles":["","OrderService","createOrder"],"fullName":" OrderService createOrder should handle RPC failure","status":"passed","title":"should handle RPC failure","duration":13,"failureMessages":[]},{"ancestorTitles":["","OrderService","updateOrder"],"fullName":" OrderService updateOrder should update order successfully","status":"passed","title":"should update order successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","OrderService","updateOrderStatus"],"fullName":" OrderService updateOrderStatus should update order status successfully","status":"passed","title":"should update order status successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","OrderService","getOrderStatusHistory"],"fullName":" OrderService getOrderStatusHistory should return order status history successfully","status":"passed","title":"should return order status history successfully","duration":1,"failureMessages":[]}],"startTime":1758720589251,"endTime":1758720589393,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OrderService.test.ts"},{"assertionResults":[{"ancestorTitles":["","ProductController Unit Tests","getCarousel"],"fullName":" ProductController Unit Tests getCarousel should return carousel products successfully","status":"passed","title":"should return carousel products successfully","duration":15,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getCarousel"],"fullName":" ProductController Unit Tests getCarousel should handle service errors","status":"passed","title":"should handle service errors","duration":39,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getProducts"],"fullName":" ProductController Unit Tests getProducts should return products successfully","status":"passed","title":"should return products successfully","duration":10,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getFeatured"],"fullName":" ProductController Unit Tests getFeatured should return featured products successfully","status":"passed","title":"should return featured products successfully","duration":20,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getFeatured"],"fullName":" ProductController Unit Tests getFeatured should handle service errors","status":"passed","title":"should handle service errors","duration":43,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getProductById"],"fullName":" ProductController Unit Tests getProductById should return product successfully","status":"passed","title":"should return product successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","getProductById"],"fullName":" ProductController Unit Tests getProductById should handle product not found","status":"passed","title":"should handle product not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","searchProducts"],"fullName":" ProductController Unit Tests searchProducts should search products successfully","status":"passed","title":"should search products successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","searchProducts"],"fullName":" ProductController Unit Tests searchProducts should handle missing search term","status":"passed","title":"should handle missing search term","duration":1,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","createProduct"],"fullName":" ProductController Unit Tests createProduct should create product successfully","status":"passed","title":"should create product successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","updateProduct"],"fullName":" ProductController Unit Tests updateProduct should update product successfully","status":"passed","title":"should update product successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","updateCarouselOrder"],"fullName":" ProductController Unit Tests updateCarouselOrder should update carousel order successfully","status":"passed","title":"should update carousel order successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","deleteProduct"],"fullName":" ProductController Unit Tests deleteProduct should perform logical deletion when product has references","status":"passed","title":"should perform logical deletion when product has references","duration":2,"failureMessages":[]},{"ancestorTitles":["","ProductController Unit Tests","deleteProduct"],"fullName":" ProductController Unit Tests deleteProduct should perform physical deletion when product has no references","status":"passed","title":"should perform physical deletion when product has no references","duration":2,"failureMessages":[]}],"startTime":1758720589352,"endTime":1758720589502,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/ProductController.test.ts"},{"assertionResults":[{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should return users successfully","status":"passed","title":"should return users successfully","duration":25,"failureMessages":[]},{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should handle validation errors","status":"passed","title":"should handle validation errors","duration":16,"failureMessages":[]},{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should handle service errors","status":"passed","title":"should handle service errors","duration":17,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should return user successfully","status":"passed","title":"should return user successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should handle user not found","status":"passed","title":"should handle user not found","duration":10,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should create user successfully","status":"passed","title":"should create user successfully","duration":4,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should handle validation errors","status":"passed","title":"should handle validation errors","duration":8,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should handle email already exists","status":"passed","title":"should handle email already exists","duration":10,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":7,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should handle user not found","status":"passed","title":"should handle user not found","duration":5,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should toggle user active status successfully","status":"passed","title":"should toggle user active status successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":10,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should handle user not found","status":"passed","title":"should handle user not found","duration":10,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should perform logical deletion when user has references","status":"passed","title":"should perform logical deletion when user has references","duration":7,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should perform physical deletion when user has no references","status":"passed","title":"should perform physical deletion when user has no references","duration":2,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":10,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should handle user not found","status":"passed","title":"should handle user not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate getAllUsers correctly","status":"passed","title":"should validate getAllUsers correctly","duration":15,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate getUserById correctly","status":"passed","title":"should validate getUserById correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate createUser correctly","status":"passed","title":"should validate createUser correctly","duration":8,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate updateUser correctly","status":"passed","title":"should validate updateUser correctly","duration":12,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate toggleUserActive correctly","status":"passed","title":"should validate toggleUserActive correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","userValidators"],"fullName":" UserController userValidators should validate deleteUser correctly","status":"passed","title":"should validate deleteUser correctly","duration":3,"failureMessages":[]}],"startTime":1758720586857,"endTime":1758720587098,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/UserController.test.ts"},{"assertionResults":[{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should return users successfully with default parameters","status":"passed","title":"should return users successfully with default parameters","duration":26,"failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle search filter","status":"passed","title":"should handle search filter","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle role filter","status":"passed","title":"should handle role filter","duration":18,"failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle database errors","status":"passed","title":"should handle database errors","duration":72,"failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should return user successfully","status":"passed","title":"should return user successfully","duration":18,"failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":0,"failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should handle user not found","status":"passed","title":"should handle user not found","duration":0,"failureMessages":[]},{"ancestorTitles":["","UserService","getUserByEmail"],"fullName":" UserService getUserByEmail should return user successfully","status":"passed","title":"should return user successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserService","getUserByEmail"],"fullName":" UserService getUserByEmail should handle empty email","status":"passed","title":"should handle empty email","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserService","createUser"],"fullName":" UserService createUser should create user successfully","status":"passed","title":"should create user successfully","duration":22,"failureMessages":[]},{"ancestorTitles":["","UserService","createUser"],"fullName":" UserService createUser should handle validation errors","status":"passed","title":"should handle validation errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserService","updateUser"],"fullName":" UserService updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":14,"failureMessages":[]},{"ancestorTitles":["","UserService","updateUser"],"fullName":" UserService updateUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserService","toggleUserActive"],"fullName":" UserService toggleUserActive should toggle user active status successfully","status":"passed","title":"should toggle user active status successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","UserService","toggleUserActive"],"fullName":" UserService toggleUserActive should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":11,"failureMessages":[]},{"ancestorTitles":["","UserService","deleteUser"],"fullName":" UserService deleteUser should delete user successfully","status":"passed","title":"should delete user successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","UserService","deleteUser"],"fullName":" UserService deleteUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":0,"failureMessages":[]}],"startTime":1758720588457,"endTime":1758720588650,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/UserService.test.ts"},{"assertionResults":[{"ancestorTitles":["","Test Database Configuration Unit Tests","TestEnvironmentValidator"],"fullName":" Test Database Configuration Unit Tests TestEnvironmentValidator should validate environment variables successfully","status":"passed","title":"should validate environment variables successfully","duration":4,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","TestEnvironmentValidator"],"fullName":" Test Database Configuration Unit Tests TestEnvironmentValidator should throw error for missing SUPABASE_URL","status":"passed","title":"should throw error for missing SUPABASE_URL","duration":25,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","TestEnvironmentValidator"],"fullName":" Test Database Configuration Unit Tests TestEnvironmentValidator should throw error for missing SUPABASE_ANON_KEY","status":"passed","title":"should throw error for missing SUPABASE_ANON_KEY","duration":1,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","TestEnvironmentValidator"],"fullName":" Test Database Configuration Unit Tests TestEnvironmentValidator should throw error for invalid URL format","status":"passed","title":"should throw error for invalid URL format","duration":1,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","TestEnvironmentValidator"],"fullName":" Test Database Configuration Unit Tests TestEnvironmentValidator should work without service key","status":"passed","title":"should work without service key","duration":1,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","Type Definitions"],"fullName":" Test Database Configuration Unit Tests Type Definitions should have proper ConnectionMetrics type","status":"passed","title":"should have proper ConnectionMetrics type","duration":4,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","Environment Setup"],"fullName":" Test Database Configuration Unit Tests Environment Setup should handle environment variables correctly","status":"passed","title":"should handle environment variables correctly","duration":1,"failureMessages":[]},{"ancestorTitles":["","Test Database Configuration Unit Tests","Environment Setup"],"fullName":" Test Database Configuration Unit Tests Environment Setup should work with test environment","status":"passed","title":"should work with test environment","duration":0,"failureMessages":[]}],"startTime":1758720591002,"endTime":1758720591042,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/test-database.test.ts"}]}