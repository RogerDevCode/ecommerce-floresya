{"numTotalTestSuites":90,"numPassedTestSuites":89,"numFailedTestSuites":1,"numPendingTestSuites":0,"numTotalTests":165,"numPassedTests":161,"numFailedTests":4,"numPendingTests":0,"numTodoTests":0,"startTime":1758890697196,"success":false,"testResults":[{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"failed","message":"Failed to load url jsdom (resolved id: jsdom) in /home/manager/Sync/ecommerce-floresya/tests/integration/cart-payment.test.ts. Does the file exist?","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/cart-payment.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should connect to Supabase successfully","status":"passed","title":"should connect to Supabase successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in products table","status":"passed","title":"should have real data in products table","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in occasions table","status":"passed","title":"should have real data in occasions table","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in product_images table","status":"passed","title":"should have real data in product_images table","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Basic Database Connection"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Basic Database Connection should have real data in product_occasions table","status":"passed","title":"should have real data in product_occasions table","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Relationships"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Relationships should verify product-occasion relationships","status":"passed","title":"should verify product-occasion relationships","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Relationships"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Relationships should verify product-images relationships","status":"passed","title":"should verify product-images relationships","duration":0,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify all products have valid data","status":"passed","title":"should verify all products have valid data","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify all occasions have valid data","status":"passed","title":"should verify all occasions have valid data","duration":0,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Data Integrity Checks"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Data Integrity Checks should verify image URLs are valid","status":"passed","title":"should verify image URLs are valid","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Performance"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Performance should perform basic queries efficiently","status":"passed","title":"should perform basic queries efficiently","duration":0,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Performance"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Performance should handle multiple concurrent queries","status":"passed","title":"should handle multiple concurrent queries","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should provide health status information","status":"passed","title":"should provide health status information","duration":0,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should track connection metrics accurately","status":"passed","title":"should track connection metrics accurately","duration":1,"failureMessages":[]},{"ancestorTitles":["","FloresYa Database Connection Tests - Simple Mock Edition","Database Health Monitoring"],"fullName":" FloresYa Database Connection Tests - Simple Mock Edition Database Health Monitoring should validate database schema integrity","status":"passed","title":"should validate database schema integrity","duration":1,"failureMessages":[]}],"startTime":1758890697684,"endTime":1758890697698,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/database-connection.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/html-data-retrieval-fixed.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/html-data-retrieval.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/mime-types.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should return occasions from mock database","status":"pending","title":"should return occasions from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should return active occasions only from mock database","status":"pending","title":"should return active occasions only from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should sort occasions by display order from mock database","status":"pending","title":"should sort occasions by display order from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions - Simple Mock Integration should filter occasions by search term from mock database","status":"pending","title":"should filter occasions by search term from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/:id - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/:id - Simple Mock Integration should return a specific occasion from mock database","status":"pending","title":"should return a specific occasion from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/:id - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/:id - Simple Mock Integration should return 404 for non-existent occasion","status":"pending","title":"should return 404 for non-existent occasion","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/search - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/search - Simple Mock Integration should handle search endpoint gracefully","status":"pending","title":"should handle search endpoint gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","GET /api/occasions/search - Simple Mock Integration"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition GET /api/occasions/search - Simple Mock Integration should handle non-matching search gracefully","status":"pending","title":"should handle non-matching search gracefully","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify mock database connection and occasions data integrity","status":"pending","title":"should verify mock database connection and occasions data integrity","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify product_occasions relationship in mock database","status":"pending","title":"should verify product_occasions relationship in mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Database Connection Validation should verify occasions have proper slug format","status":"pending","title":"should verify occasions have proper slug format","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Occasions Data Consistency"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Occasions Data Consistency should verify all occasions have unique slugs","status":"pending","title":"should verify all occasions have unique slugs","failureMessages":[]},{"ancestorTitles":["","FloresYa Occasions Integration Tests - Simple Mock Edition","Occasions Data Consistency"],"fullName":" FloresYa Occasions Integration Tests - Simple Mock Edition Occasions Data Consistency should verify all occasions have valid descriptions","status":"pending","title":"should verify all occasions have valid descriptions","failureMessages":[]}],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/occasions.test.ts"},{"assertionResults":[{"ancestorTitles":["","Orders CRUD Integration Tests","POST /api/orders - Create Order"],"fullName":" Orders CRUD Integration Tests POST /api/orders - Create Order should create a new order with valid data","status":"pending","title":"should create a new order with valid data","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","POST /api/orders - Create Order"],"fullName":" Orders CRUD Integration Tests POST /api/orders - Create Order should fail with missing required fields","status":"pending","title":"should fail with missing required fields","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","POST /api/orders - Create Order"],"fullName":" Orders CRUD Integration Tests POST /api/orders - Create Order should validate product availability","status":"pending","title":"should validate product availability","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","GET /api/orders - List Orders"],"fullName":" Orders CRUD Integration Tests GET /api/orders - List Orders should return paginated list of orders","status":"pending","title":"should return paginated list of orders","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","GET /api/orders - List Orders"],"fullName":" Orders CRUD Integration Tests GET /api/orders - List Orders should filter orders by status","status":"pending","title":"should filter orders by status","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","GET /api/orders - List Orders"],"fullName":" Orders CRUD Integration Tests GET /api/orders - List Orders should search orders by customer name","status":"pending","title":"should search orders by customer name","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","GET /api/orders/:id - Get Order Details"],"fullName":" Orders CRUD Integration Tests GET /api/orders/:id - Get Order Details should return complete order details","status":"pending","title":"should return complete order details","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","GET /api/orders/:id - Get Order Details"],"fullName":" Orders CRUD Integration Tests GET /api/orders/:id - Get Order Details should return 404 for non-existent order","status":"pending","title":"should return 404 for non-existent order","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","PUT /api/orders/:id/status - Update Order Status"],"fullName":" Orders CRUD Integration Tests PUT /api/orders/:id/status - Update Order Status should update order status successfully","status":"pending","title":"should update order status successfully","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","PUT /api/orders/:id/status - Update Order Status"],"fullName":" Orders CRUD Integration Tests PUT /api/orders/:id/status - Update Order Status should validate status transitions","status":"pending","title":"should validate status transitions","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","DELETE /api/orders/:id - Cancel Order"],"fullName":" Orders CRUD Integration Tests DELETE /api/orders/:id - Cancel Order should cancel order successfully","status":"pending","title":"should cancel order successfully","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","DELETE /api/orders/:id - Cancel Order"],"fullName":" Orders CRUD Integration Tests DELETE /api/orders/:id - Cancel Order should not cancel already delivered orders","status":"pending","title":"should not cancel already delivered orders","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","Order Statistics and Reporting"],"fullName":" Orders CRUD Integration Tests Order Statistics and Reporting should return order statistics","status":"pending","title":"should return order statistics","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","Order Statistics and Reporting"],"fullName":" Orders CRUD Integration Tests Order Statistics and Reporting should return orders by date range","status":"pending","title":"should return orders by date range","failureMessages":[]},{"ancestorTitles":["","Orders CRUD Integration Tests","Order Item Management"],"fullName":" Orders CRUD Integration Tests Order Item Management should handle order items correctly","status":"pending","title":"should handle order items correctly","failureMessages":[]}],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/orders-crud.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/products-simplified.test.ts"},{"assertionResults":[{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should return products from mock database","status":"pending","title":"should return products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should return products with mock images from database","status":"pending","title":"should return products with mock images from database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should filter products by active status from mock database","status":"pending","title":"should filter products by active status from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products - Simple Mock Integration should sort products by carousel order from mock database","status":"pending","title":"should sort products by carousel order from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/carousel - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/carousel - Simple Mock Integration should return carousel products from mock database","status":"pending","title":"should return carousel products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/carousel - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/carousel - Simple Mock Integration should return carousel products with mock images","status":"pending","title":"should return carousel products with mock images","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/featured - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/featured - Simple Mock Integration should return featured products from mock database","status":"pending","title":"should return featured products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/:id - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/:id - Simple Mock Integration should return a specific product from mock database","status":"pending","title":"should return a specific product from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/:id - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/:id - Simple Mock Integration should return 404 for non-existent product","status":"pending","title":"should return 404 for non-existent product","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/search - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/search - Simple Mock Integration should search products from mock database","status":"pending","title":"should search products from mock database","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","GET /api/products/search - Simple Mock Integration"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition GET /api/products/search - Simple Mock Integration should return empty results for non-matching search","status":"pending","title":"should return empty results for non-matching search","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition Database Connection Validation should verify mock database connection and data integrity","status":"pending","title":"should verify mock database connection and data integrity","failureMessages":[]},{"ancestorTitles":["","FloresYa Products Integration Tests - Simple Mock Edition","Database Connection Validation"],"fullName":" FloresYa Products Integration Tests - Simple Mock Edition Database Connection Validation should verify product images relationship in mock database","status":"pending","title":"should verify product images relationship in mock database","failureMessages":[]}],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/products.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/server.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/integration/trpc-html-integration.test.ts"},{"assertionResults":[{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should upload product image successfully","status":"failed","title":"should upload product image successfully","duration":33,"failureMessages":["expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":188,"column":36}},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle validation errors","status":"failed","title":"should handle validation errors","duration":6,"failureMessages":["expected \"spy\" to be called with arguments: [ { …(2) } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ { …(2) } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ { …(2) } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":221,"column":36}},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle missing file","status":"passed","title":"should handle missing file","duration":2,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle invalid image file","status":"passed","title":"should handle invalid image file","duration":4,"failureMessages":[]},{"ancestorTitles":["","ImageController","uploadProductImage"],"fullName":" ImageController uploadProductImage should handle service errors","status":"passed","title":"should handle service errors","duration":6,"failureMessages":[]},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should delete product images successfully","status":"failed","title":"should delete product images successfully","duration":14,"failureMessages":["expected \"spy\" to be called with arguments: [ { params: { productId: '1' } } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ { params: { productId: '1' } } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ { params: { productId: '1' } } ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":328,"column":36}},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should handle validation errors","status":"failed","title":"should handle validation errors","duration":12,"failureMessages":["expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n","expected \"spy\" to be called with arguments: [ Array(1) ]\n\nReceived: \n\n\n\nNumber of calls: 0\n"],"location":{"line":350,"column":36}},{"ancestorTitles":["","ImageController","deleteProductImages"],"fullName":" ImageController deleteProductImages should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should return product images successfully","status":"pending","title":"should return product images successfully","failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","ImageController","getProductImages"],"fullName":" ImageController getProductImages should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","ImageController","getImagesGallery"],"fullName":" ImageController getImagesGallery should return images gallery successfully","status":"pending","title":"should return images gallery successfully","failureMessages":[]},{"ancestorTitles":["","ImageController","getImagesGallery"],"fullName":" ImageController getImagesGallery should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should upload site image successfully","status":"pending","title":"should upload site image successfully","failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","ImageController","uploadSiteImage"],"fullName":" ImageController uploadSiteImage should handle missing file","status":"pending","title":"should handle missing file","failureMessages":[]},{"ancestorTitles":["","ImageController","getCurrentSiteImages"],"fullName":" ImageController getCurrentSiteImages should return current site images successfully","status":"pending","title":"should return current site images successfully","failureMessages":[]},{"ancestorTitles":["","ImageController","getCurrentSiteImages"],"fullName":" ImageController getCurrentSiteImages should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","ImageController","getProductsWithImageCounts"],"fullName":" ImageController getProductsWithImageCounts should return products with image counts successfully","status":"pending","title":"should return products with image counts successfully","failureMessages":[]},{"ancestorTitles":["","ImageController","getProductsWithImageCounts"],"fullName":" ImageController getProductsWithImageCounts should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate uploadProductImage correctly","status":"pending","title":"should validate uploadProductImage correctly","failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate deleteProductImages correctly","status":"pending","title":"should validate deleteProductImages correctly","failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate getProductImages correctly","status":"pending","title":"should validate getProductImages correctly","failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate getImagesGallery correctly","status":"pending","title":"should validate getImagesGallery correctly","failureMessages":[]},{"ancestorTitles":["","ImageController","imageValidators"],"fullName":" ImageController imageValidators should validate uploadSiteImage correctly","status":"pending","title":"should validate uploadSiteImage correctly","failureMessages":[]}],"startTime":1758890698018,"endTime":1758890698115,"status":"failed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/ImageController.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/LogsController.test.ts"},{"assertionResults":[{"ancestorTitles":["","OccasionsController","getOccasions"],"fullName":" OccasionsController getOccasions should return all active occasions successfully","status":"passed","title":"should return all active occasions successfully","duration":4,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasions"],"fullName":" OccasionsController getOccasions should handle service errors","status":"passed","title":"should handle service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should return occasion by ID successfully","status":"passed","title":"should return occasion by ID successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","getOccasionById"],"fullName":" OccasionsController getOccasionById should handle service errors","status":"passed","title":"should handle service errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should create occasion successfully","status":"passed","title":"should create occasion successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should handle duplicate name error","status":"passed","title":"should handle duplicate name error","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","createOccasion"],"fullName":" OccasionsController createOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should update occasion successfully","status":"passed","title":"should update occasion successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","updateOccasion"],"fullName":" OccasionsController updateOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should perform logical deletion when occasion has references","status":"passed","title":"should perform logical deletion when occasion has references","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should perform physical deletion when occasion has no references","status":"passed","title":"should perform physical deletion when occasion has no references","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should return 404 when occasion not found","status":"passed","title":"should return 404 when occasion not found","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","deleteOccasion"],"fullName":" OccasionsController deleteOccasion should handle service errors","status":"passed","title":"should handle service errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","capitalizeOccasionName"],"fullName":" OccasionsController Private helper methods capitalizeOccasionName should capitalize occasion names correctly","status":"passed","title":"should capitalize occasion names correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","capitalizeOccasionName"],"fullName":" OccasionsController Private helper methods capitalizeOccasionName should handle empty and single word names","status":"passed","title":"should handle empty and single word names","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","normalizeOccasionName"],"fullName":" OccasionsController Private helper methods normalizeOccasionName should normalize occasion names correctly","status":"passed","title":"should normalize occasion names correctly","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","normalizeOccasionName"],"fullName":" OccasionsController Private helper methods normalizeOccasionName should preserve ñ character","status":"passed","title":"should preserve ñ character","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should return false when name does not exist","status":"passed","title":"should return false when name does not exist","duration":0,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should return true when name exists","status":"passed","title":"should return true when name exists","duration":1,"failureMessages":[]},{"ancestorTitles":["","OccasionsController","Private helper methods","checkOccasionNameExists"],"fullName":" OccasionsController Private helper methods checkOccasionNameExists should exclude specified ID when checking","status":"passed","title":"should exclude specified ID when checking","duration":0,"failureMessages":[]}],"startTime":1758890697730,"endTime":1758890697752,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OccasionsController.test.ts"},{"assertionResults":[{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should return orders successfully - clean simple test","status":"pending","title":"should return orders successfully - clean simple test","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should use default values when query params are missing","status":"pending","title":"should use default values when query params are missing","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrders"],"fullName":" OrderController - Silicon Valley Simple Tests getOrders should limit maximum limit value","status":"pending","title":"should limit maximum limit value","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should return order successfully","status":"pending","title":"should return order successfully","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle order not found","status":"pending","title":"should handle order not found","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderById"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderById should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should create order successfully","status":"pending","title":"should create order successfully","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","createOrder"],"fullName":" OrderController - Silicon Valley Simple Tests createOrder should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should update order successfully","status":"pending","title":"should update order successfully","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle empty update data","status":"pending","title":"should handle empty update data","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrder"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrder should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should update order status successfully","status":"pending","title":"should update order status successfully","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","updateOrderStatus"],"fullName":" OrderController - Silicon Valley Simple Tests updateOrderStatus should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderStatusHistory"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderStatusHistory should return order status history successfully","status":"pending","title":"should return order status history successfully","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","getOrderStatusHistory"],"fullName":" OrderController - Silicon Valley Simple Tests getOrderStatusHistory should handle service errors","status":"pending","title":"should handle service errors","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate getOrders correctly","status":"pending","title":"should validate getOrders correctly","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate getOrderById correctly","status":"pending","title":"should validate getOrderById correctly","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate createOrder correctly","status":"pending","title":"should validate createOrder correctly","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate updateOrder correctly","status":"pending","title":"should validate updateOrder correctly","failureMessages":[]},{"ancestorTitles":["","OrderController - Silicon Valley Simple Tests","orderValidators"],"fullName":" OrderController - Silicon Valley Simple Tests orderValidators should validate updateOrderStatus correctly","status":"pending","title":"should validate updateOrderStatus correctly","failureMessages":[]}],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OrderController.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/OrderService.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/ProductController.test.ts"},{"assertionResults":[{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should return users successfully","status":"passed","title":"should return users successfully","duration":19,"failureMessages":[]},{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should handle validation errors","status":"passed","title":"should handle validation errors","duration":8,"failureMessages":[]},{"ancestorTitles":["","UserController","getAllUsers"],"fullName":" UserController getAllUsers should handle service errors","status":"passed","title":"should handle service errors","duration":4,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should return user successfully","status":"passed","title":"should return user successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","getUserById"],"fullName":" UserController getUserById should handle user not found","status":"passed","title":"should handle user not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should create user successfully","status":"passed","title":"should create user successfully","duration":3,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should handle validation errors","status":"passed","title":"should handle validation errors","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","createUser"],"fullName":" UserController createUser should handle email already exists","status":"passed","title":"should handle email already exists","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should update user successfully","status":"passed","title":"should update user successfully","duration":2,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","updateUser"],"fullName":" UserController updateUser should handle user not found","status":"passed","title":"should handle user not found","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should toggle user active status successfully","status":"passed","title":"should toggle user active status successfully","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":4,"failureMessages":[]},{"ancestorTitles":["","UserController","toggleUserActive"],"fullName":" UserController toggleUserActive should handle user not found","status":"passed","title":"should handle user not found","duration":6,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should perform logical deletion when user has references","status":"passed","title":"should perform logical deletion when user has references","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should perform physical deletion when user has no references","status":"passed","title":"should perform physical deletion when user has no references","duration":3,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should handle invalid user ID","status":"passed","title":"should handle invalid user ID","duration":1,"failureMessages":[]},{"ancestorTitles":["","UserController","deleteUser"],"fullName":" UserController deleteUser should handle user not found","status":"passed","title":"should handle user not found","duration":1,"failureMessages":[]}],"startTime":1758890697805,"endTime":1758890697867,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/UserController.test.ts"},{"assertionResults":[{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should return users successfully with default parameters","status":"pending","title":"should return users successfully with default parameters","failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle search filter","status":"pending","title":"should handle search filter","failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle role filter","status":"pending","title":"should handle role filter","failureMessages":[]},{"ancestorTitles":["","UserService","getAllUsers"],"fullName":" UserService getAllUsers should handle database errors","status":"pending","title":"should handle database errors","failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should return user successfully","status":"pending","title":"should return user successfully","failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should handle invalid user ID","status":"pending","title":"should handle invalid user ID","failureMessages":[]},{"ancestorTitles":["","UserService","getUserById"],"fullName":" UserService getUserById should handle user not found","status":"pending","title":"should handle user not found","failureMessages":[]},{"ancestorTitles":["","UserService","getUserByEmail"],"fullName":" UserService getUserByEmail should return user successfully","status":"pending","title":"should return user successfully","failureMessages":[]},{"ancestorTitles":["","UserService","getUserByEmail"],"fullName":" UserService getUserByEmail should handle empty email","status":"pending","title":"should handle empty email","failureMessages":[]},{"ancestorTitles":["","UserService","createUser"],"fullName":" UserService createUser should create user successfully","status":"pending","title":"should create user successfully","failureMessages":[]},{"ancestorTitles":["","UserService","createUser"],"fullName":" UserService createUser should handle validation errors","status":"pending","title":"should handle validation errors","failureMessages":[]},{"ancestorTitles":["","UserService","updateUser"],"fullName":" UserService updateUser should update user successfully","status":"pending","title":"should update user successfully","failureMessages":[]},{"ancestorTitles":["","UserService","updateUser"],"fullName":" UserService updateUser should handle invalid user ID","status":"pending","title":"should handle invalid user ID","failureMessages":[]},{"ancestorTitles":["","UserService","toggleUserActive"],"fullName":" UserService toggleUserActive should toggle user active status successfully","status":"pending","title":"should toggle user active status successfully","failureMessages":[]},{"ancestorTitles":["","UserService","toggleUserActive"],"fullName":" UserService toggleUserActive should handle invalid user ID","status":"pending","title":"should handle invalid user ID","failureMessages":[]},{"ancestorTitles":["","UserService","deleteUser"],"fullName":" UserService deleteUser should delete user successfully","status":"pending","title":"should delete user successfully","failureMessages":[]},{"ancestorTitles":["","UserService","deleteUser"],"fullName":" UserService deleteUser should handle invalid user ID","status":"pending","title":"should handle invalid user ID","failureMessages":[]}],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/UserService.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/frontend-data-retrieval.test.ts"},{"assertionResults":[],"startTime":1758890697196,"endTime":1758890697196,"status":"passed","message":"","name":"/home/manager/Sync/ecommerce-floresya/tests/unit/test-database.test.ts"}]}