{
  "compilerOptions": {
    // ConfiguraciÃ³n base optimizada para Node.js + ES modules
    "target": "ES2022",                    // Soporte completo Node 18+
    "module": "Node16",                    // Mejor resoluciÃ³n para Node con ESM
    "moduleResolution": "Node16",          // ResoluciÃ³n hÃ­brida ESM/CommonJS
    "lib": ["ES2022", "DOM"],              // APIs modernas + DOM para frontend
    
    // Estructura de archivos FloresYa
    "outDir": "./dist",                    // CompilaciÃ³n TypeScript â†’ JavaScript
    "rootDir": "./",                       // RaÃ­z del proyecto
    "baseUrl": "./",                       // Base para paths absolutos
    "paths": {
      "@backend/*": ["./backend/src/*"],
      "@frontend/*": ["./frontend/*"],
      "@shared/*": ["./shared/*"],
      "@types/*": ["./types/*"]
    },
    
    // Control de compilaciÃ³n
    "allowJs": true,                       // Coexistencia JS/TS durante migraciÃ³n
    "checkJs": false,                      // No verificar JS automÃ¡ticamente
    "declaration": false,                  // .d.ts no necesarios para aplicaciÃ³n final
    "declarationMap": false,              // Mapas .d.ts innecesarios
    "sourceMap": true,                    // Source maps para debugging
    "incremental": true,                  // CompilaciÃ³n incremental (mÃ¡s rÃ¡pida)
    "tsBuildInfoFile": "./dist/.tsbuildinfo", // Cache de compilaciÃ³n incremental
    
    // ConfiguraciÃ³n de tipos (gradual â†’ estricta)
    "strict": false,                      // ðŸ”„ Cambiar a true cuando todo migre
    "noImplicitAny": false,               // ðŸ”„ Activar gradualmente
    "strictNullChecks": false,            // ðŸ”„ Activar cuando elimines nullable bugs
    "strictFunctionTypes": false,         // ðŸ”„ Para callbacks mÃ¡s seguros
    "noImplicitReturns": true,            // âœ… Funciones deben retornar siempre
    "noFallthroughCasesInSwitch": true,   // âœ… Switch cases mÃ¡s seguros
    "noUncheckedIndexedAccess": false,    // ðŸ”„ Arrays/objetos mÃ¡s seguros
    
    // Interoperabilidad y compatibilidad
    "esModuleInterop": true,              // âœ… Interop con CommonJS
    "allowSyntheticDefaultImports": true, // âœ… import express from 'express'
    "forceConsistentCasingInFileNames": true, // âœ… Nombres de archivo consistentes
    "skipLibCheck": true,                 // âœ… Skip verificaciÃ³n de .d.ts de node_modules
    "resolveJsonModule": true,            // âœ… import packageJson from './package.json'
    "isolatedModules": true,              // âœ… Compatibilidad con transpilers
    "allowImportingTsExtensions": false,   // âœ… Para Node.js ESM
    
    // Node.js especÃ­fico
    "types": ["node"],                    // âœ… Tipos de Node.js disponibles
    "moduleDetection": "force",           // âœ… Detectar mÃ³dulos correctamente
    "noEmit": false                       // âœ… Generar archivos .js
  },
  
  // Archivos incluidos en compilaciÃ³n
  "include": [
    "backend/src/**/*.ts",      // Backend TypeScript
    "backend/src/**/*.js",      // Backend JavaScript (durante migraciÃ³n)  
    "frontend/**/*.ts",         // Frontend TypeScript
    "shared/**/*.ts",           // CÃ³digo compartido
    "types/**/*.ts"             // Definiciones de tipos
  ],
  
  // Archivos excluidos de compilaciÃ³n
  "exclude": [
    "node_modules",             // Dependencias
    "dist",                     // Archivos compilados
    "dbimagenes",              // Respaldo de imÃ¡genes
    "oldfiles",                // Archivos obsoletos
    "tests/**/*.test.js",      // Tests JavaScript (usar vitest)
    "tests/**/*.test.ts",      // Tests TypeScript (usar vitest)  
    "*.config.js",             // Archivos de configuraciÃ³n
    "*.config.ts",             // Archivos de configuraciÃ³n TS
    "backup_images.js",        // Scripts utilitarios
    "demo-server.js",          // Servidor demo
    "temp*.js",                // Archivos temporales
    "backend/src/controllers/bked_*.js", // Archivos JS problemÃ¡ticos temporalmente
    "backend/src/controllers/categoryController*.js", // Controladores obsoletos
    "backend/src/controllers/orderController*.js",    // Controladores obsoletos
    "backend/src/controllers/productController*.js"   // Controladores obsoletos
  ],
  
  // ConfiguraciÃ³n para ts-node (desarrollo)
  "ts-node": {
    "esm": true,                // âœ… Soporte ESM en desarrollo
    "moduleTypes": {
      "**/*.ts": "esm"          // âœ… Todos los .ts como ESM
    },
    "experimentalSpecifierResolution": "node"
  }
}