{"version":3,"file":"logger.js","names":["LOG_PREFIX","isDev","process","env","NODE_ENV","COLORS","exports","red","yellow","green","cyan","reset","log","message","data","level","LOG_LEVEL","timestamp","Date","toISOString","output","toUpperCase","colorMap","error","console","warn","success","info","logger","context","msg","errorObj","enhancedData","conversion","event","performance","metric","userAction","action","debug","sanitizeBody","body","sensitiveFields","sanitized","key","value","Object","entries","some","field","toLowerCase","includes","length","substring","requestLogger","req","res","next","start","now","on","duration","statusCode","userAgent","forwardedFor","headers","method","originalUrl","ip","path","startTimer","label","hrtime","bigint","end","Number","toFixed","Math","round","getDuration","trackConversion","conversionData","sessionInfo","referrer","sessionId","userId","trackPerformance","performanceData","environment","nodeVersion","version","trackUserAction","details","actionData","sessionDuration","pageLoadTime","logError","additionalData","errorData","stack","name","_default","default"],"sources":["../../src-es6/utils/logger.js"],"sourcesContent":["/**\n * FloresYa Backend Logger - ES6+ Version\n * Versión: 2.0.0\n * Propósito: Logging estructurado, solo en desarrollo, con colores y timestamps.\n * Cumple con: \"Logging detallado en consola para procesos críticos durante desarrollo\"\n */\n\nconst LOG_PREFIX = '[FLORESYA-BACKEND]';\nconst isDev = process.env.NODE_ENV === 'development';\n\n// Color constants using template literals\nconst COLORS = {\n    red: '\\x1b[31m',\n    yellow: '\\x1b[33m',\n    green: '\\x1b[32m',\n    cyan: '\\x1b[36m',\n    reset: '\\x1b[0m'\n};\n\n/**\n * Función principal de logging con ES6+ features\n * @param {string} message - Mensaje descriptivo\n * @param {any} data - Datos adicionales (objeto, error, etc.)\n * @param {string} level - Nivel: 'info' | 'warn' | 'error' | 'success'\n */\nconst log = (message, data = null, level = 'info') => {\n    // Solo loguear en desarrollo (a menos que se fuerce con LOG_LEVEL=debug)\n    if (!isDev && process.env.LOG_LEVEL !== 'debug') {\n        return;\n    }\n\n    const timestamp = new Date().toISOString();\n    const output = `${LOG_PREFIX} [${level.toUpperCase()}] ${timestamp} — ${message}`;\n\n    // Colores en consola usando destructuring y template literals\n    const colorMap = {\n        error: () => {\n            console.error(`${COLORS.red}${output}${COLORS.reset}`);\n            if (data) console.error(data);\n        },\n        warn: () => {\n            console.warn(`${COLORS.yellow}${output}${COLORS.reset}`);\n            if (data) console.warn(data);\n        },\n        success: () => {\n            console.log(`${COLORS.green}${output}${COLORS.reset}`);\n            if (data) console.log(data);\n        },\n        info: () => {\n            console.log(`${COLORS.cyan}${output}${COLORS.reset}`);\n            if (data) console.log(data);\n        }\n    };\n\n    (colorMap[level] || colorMap.info)();\n};\n\n/**\n * Enhanced logger object with method shorthand syntax\n */\nconst logger = {\n    info(context, msg, data) {\n        return log(`[${context}] ${msg}`, data, 'info');\n    },\n    \n    warn(context, msg, data) {\n        return log(`[${context}] ${msg}`, data, 'warn');\n    },\n    \n    error(context, msg, data, errorObj) {\n        const enhancedData = errorObj ? { ...data, error: errorObj } : data;\n        return log(`[${context}] ${msg}`, enhancedData, 'error');\n    },\n    \n    success(context, msg, data) {\n        return log(`[${context}] ${msg}`, data, 'success');\n    },\n    \n    // Enhanced conversion tracking methods with ES6+ features\n    conversion(event, data) {\n        return log(`[CONVERSION] ${event}`, data, 'success');\n    },\n    \n    performance(metric, data) {\n        return log(`[PERFORMANCE] ${metric}`, data, 'info');\n    },\n    \n    userAction(action, data) {\n        return log(`[USER_ACTION] ${action}`, data, 'info');\n    },\n\n    // New ES6+ method for debugging with enhanced formatting\n    debug(context, msg, data) {\n        if (process.env.LOG_LEVEL === 'debug') {\n            return log(`[DEBUG][${context}] ${msg}`, data, 'info');\n        }\n    },\n\n    // Sanitize body method for safe logging\n    sanitizeBody(body) {\n        if (!body || typeof body !== 'object') return body;\n        \n        const sensitiveFields = ['password', 'token', 'secret', 'key', 'auth'];\n        const sanitized = { ...body };\n        \n        for (const [key, value] of Object.entries(sanitized)) {\n            if (sensitiveFields.some(field => key.toLowerCase().includes(field))) {\n                sanitized[key] = '***REDACTED***';\n            } else if (typeof value === 'string' && value.length > 1000) {\n                sanitized[key] = `${value.substring(0, 100)}... [TRUNCATED]`;\n            }\n        }\n        \n        return sanitized;\n    }\n};\n\n/**\n * Middleware Express para logging de requests usando arrow function\n * Uso: app.use(requestLogger);\n */\nconst requestLogger = (req, res, next) => {\n    const start = Date.now();\n\n    res.on('finish', () => {\n        const duration = Date.now() - start;\n        const level = res.statusCode >= 400 ? 'warn' : 'info';\n        \n        // Destructuring para obtener headers importantes\n        const { 'user-agent': userAgent, 'x-forwarded-for': forwardedFor } = req.headers;\n        \n        log(\n            `${req.method} ${req.originalUrl} ${res.statusCode} (${duration}ms)`, \n            {\n                ip: forwardedFor || req.ip,\n                userAgent,\n                duration,\n                statusCode: res.statusCode,\n                method: req.method,\n                path: req.originalUrl\n            }, \n            level\n        );\n    });\n\n    next();\n};\n\n/**\n * Función para medir tiempos de ejecución con ES6+ features\n * Uso:\n *   const timer = startTimer('fetchProduct');\n *   // ... código ...\n *   timer.end('CONTEXT'); // → [TIMER] fetchProduct completed in 150ms\n */\nconst startTimer = (label) => {\n    const start = process.hrtime.bigint();\n\n    return {\n        end(context = 'TIMER') {\n            const end = process.hrtime.bigint();\n            const duration = Number(end - start) / 1e6; // nanosegundos → milisegundos\n            \n            logger.info(context, `[TIMER] ${label} completed in ${duration.toFixed(2)}ms`, { \n                duration: Math.round(duration), \n                label,\n                timestamp: new Date().toISOString()\n            });\n            \n            return duration;\n        },\n\n        // New method to get duration without logging\n        getDuration() {\n            const end = process.hrtime.bigint();\n            return Number(end - start) / 1e6;\n        }\n    };\n};\n\n/**\n * Enhanced logging for conversion optimization using ES6+ features\n * Track user behavior, performance metrics, and business KPIs\n */\nconst trackConversion = (event, data = {}) => {\n    const conversionData = {\n        timestamp: new Date().toISOString(),\n        event,\n        ...data, // Spread operator\n        sessionInfo: {\n            userAgent: data.userAgent,\n            ip: data.ip,\n            referrer: data.referrer,\n            // Enhanced session tracking\n            sessionId: data.sessionId,\n            userId: data.userId\n        }\n    };\n    \n    logger.conversion(event, conversionData);\n    \n    // Return data for potential chaining or further processing\n    return conversionData;\n};\n\nconst trackPerformance = (metric, value, context = {}) => {\n    const performanceData = {\n        metric,\n        value,\n        timestamp: new Date().toISOString(),\n        // Enhanced performance context\n        environment: process.env.NODE_ENV,\n        nodeVersion: process.version,\n        ...context\n    };\n    \n    logger.performance(metric, performanceData);\n    return performanceData;\n};\n\nconst trackUserAction = (action, details = {}) => {\n    const actionData = {\n        action,\n        timestamp: new Date().toISOString(),\n        // Enhanced action tracking\n        sessionDuration: details.sessionDuration,\n        pageLoadTime: details.pageLoadTime,\n        ...details\n    };\n    \n    logger.userAction(action, actionData);\n    return actionData;\n};\n\n// Enhanced error logging with stack trace\nconst logError = (context, message, error, additionalData = {}) => {\n    const errorData = {\n        message: error.message,\n        stack: error.stack,\n        name: error.name,\n        timestamp: new Date().toISOString(),\n        ...additionalData\n    };\n    \n    logger.error(context, message, errorData, error);\n    return errorData;\n};\n\n// ES6+ exports with both default and named exports\nexport {\n    log,\n    logger,\n    requestLogger,\n    startTimer,\n    trackConversion,\n    trackPerformance,\n    trackUserAction,\n    logError,\n    COLORS\n};\n\n// Default export for main functionality\nexport default {\n    log,\n    logger,\n    requestLogger,\n    startTimer,\n    trackConversion,\n    trackPerformance,\n    trackUserAction,\n    logError\n};"],"mappings":"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","ignoreList":[]}